library("ROCR")
library("hash")
# Paste below all your PM6/COSMO score files. The first two columns must be the molname and the score (the lowest the better)
RESULTS_FILES = c("/home2/thomas/Documents/QM_Scoring/Reports/Cemal/hs90a_PM6COMSO_after_ff_corrections_scores.txt",
"/home2/thomas/Documents/QM_Scoring/Reports/Cemal/hs90a_PM6COMSO_before_ff_corrections_scores.txt",
"/home2/thomas/Documents/QM_Scoring/Reports/Cemal/hs90a_PM6COMSO_Glide_SP_scores.txt",
"/home2/thomas/Documents/QM_Scoring/Reports/Cemal/hs90a_PM6COMSO_Vina_scores.txt",
"/home2/thomas/Documents/QM_Scoring/MARK4/5es1_Glide_docking/glide-dock_SP_36A_enhanced_sampling/BEST_GLIDE_RESULTS",
"/home2/thomas/Documents/QM_Scoring/Reports/Cemal/hs90a_Vina_scores.txt"
)
# Paste below all files with compound activities (1 or 0). First column must be the molname and the second its activity.
ACTIVITIES_FILES = c("/home2/thomas/Documents/QM_Scoring/Reports/Cemal/hs90a_activities.txt",
"/home2/thomas/Documents/QM_Scoring/Reports/Cemal/hs90a_activities.txt",
"/home2/thomas/Documents/QM_Scoring/Reports/Cemal/hs90a_activities_Glide_SP.txt",
"/home2/thomas/Documents/QM_Scoring/Reports/Cemal/hs90a_activities_Vina.txt",
"/home2/thomas/Documents/QM_Scoring/MARK4/MARK4_xtest_activities.txt",
"/home2/thomas/Documents/QM_Scoring/Reports/Cemal/hs90a_activities.txt"
)
# Write the correct names of each curve to be drawn
NAMES <- c("PM6/COSMO from all corrected GAFF2",
"PM6/COSMO from all", "PM6/COSMO from Glide SP",
"PM6/COSMO from Vina", "Glide SP", "Vina")
# Now just run the remaing code and enjoy!
# A function to read PM6/COSMO scoring results and a file with the activity of each ligand (0 or 1)
read_PM6_scores <- function(RESULTS_FILE, ACTIVITIES_FILE) {
x = read.table(RESULTS_FILE, header = TRUE)
colnames(x)[2] = "score"
# ignore the other columns
score_dict = hash()
for (i in seq(1, nrow(x))) { score_dict[x[i,1]] <- x[i,2] }
a = read.table(ACTIVITIES_FILE)
colnames(a)[1] = "molname"
colnames(a)[2] = "label"
label_dict = hash()
for (i in seq(1, nrow(a))) { label_dict[a[i,1]] <- a[i,2] }
scores <- rep(0, nrow(x))
labels <- rep("", nrow(x))
i = 1
for (molname in names(score_dict)) {
scores[i] <- score_dict[[molname]]
labels[i] <- label_dict[[molname]]
i <- i+1
}
pred = prediction(-1*scores, labels)  ;# IMPORTANT: -1* because the function prediction() assumes that the highest the score the better
return(pred)
}
par(cex.main=2.0, cex.lab=1.5) ; # <== CHANGE ME
COLORS <- rainbow(3*length(RESULTS_FILES))
COLORS <- COLORS[seq(3, length(COLORS), 3)]
for (i in 1:length(RESULTS_FILES)) {
pred = read_PM6_scores(RESULTS_FILES[i], ACTIVITIES_FILES[i])
perf = performance(pred, 'tpr', 'fpr')
if (i==1) { plot(perf, add = FALSE, colorize = FALSE, lwd=3, col=COLORS[i], main="HSP90 ROC Curves") }
else { plot(perf, add = TRUE, colorize = FALSE, lwd=3, col=COLORS[i]) }
# plot(perf2, add = TRUE, colorize = TRUE, lwd=3)
# plot(perf3, add = TRUE, colorize = TRUE, lwd=3)
}
AUCs = rep(0, length(RESULTS_FILES))
LNAMES = rep(0, length(RESULTS_FILES))
for (i in 1:length(RESULTS_FILES)) {
pred = read_PM6_scores(RESULTS_FILES[i], ACTIVITIES_FILES[i])
auc = performance(pred, measure='auc')
AUCs[i] = sprintf("%.3f", auc@y.values)
LNAMES[i] = paste(NAMES[i], "(", AUCs[i],")")
# print(paste(NAMES[i], "AUC-ROC=", auc@y.values))
}
abline(a=0, b=1, lty=2, lwd=3, col="black")
# Add legend
legend(0.65, 0.35, legend=LNAMES,
col=COLORS, lty=1, cex=1.1) ; # <== CHANGE ME
